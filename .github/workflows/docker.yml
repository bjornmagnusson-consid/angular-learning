# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Docker

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    tags:
    - "*"
  pull_request:
    branches: [ "main" ]

permissions:
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup pack
      run: |
        sudo add-apt-repository ppa:cncf-buildpacks/pack-cli
        sudo apt-get update
        sudo apt-get install pack-cli

        pack config default-builder paketobuildpacks/builder:buildpackless-full
    - name: Image metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ vars.DOCKER_USERNAME }}/angular-learning
        tags: |
            type=raw,value={{sha}}
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}
    - name: Transform tags and labels
      id: transform
      run: |
        tags="${{ steps.meta.outputs.tags }}"
        echo "tags=${tags//$'\n'/,}" >> $GITHUB_OUTPUT
        labels="${{ steps.meta.outputs.labels }}"
        transformed_labels=${labels//$'\n'/,}
        exported_labels=""
        BP_OCI_CREATED=$(echo $transformed_labels | cut -d, -f1 | cut -d= -f2)
        exported_labels="--env BP_OCI_CREATED=$BP_OCI_CREATED $exported_labels"
        BP_OCI_DESCRIPTION=$(echo $transformed_labels | cut -d, -f2 | cut -d= -f2)
        exported_labels="--env BP_OCI_DESCRIPTION=$BP_OCI_DESCRIPTION $exported_labels"
        BP_OCI_LICENSES=$(echo $transformed_labels | cut -d, -f3 | cut -d= -f2)
        exported_labels="--env BP_OCI_LICENSES=$BP_OCI_LICENSES $exported_labels"
        BP_OCI_REF_NAME=$(echo $transformed_labels | cut -d, -f4 | cut -d= -f2)
        exported_labels="--env BP_OCI_REF_NAME=$BP_OCI_REF_NAME $exported_labels"
        BP_OCI_SOURCE=$(echo $transformed_labels | cut -d, -f5 | cut -d= -f2)
        exported_labels="--env BP_OCI_SOURCE=$BP_OCI_SOURCE $exported_labels"
        BP_OCI_TITLE=$(echo $transformed_labels | cut -d, -f6 | cut -d= -f2)
        exported_labels="--env BP_OCI_TITLE=$BP_OCI_TITLE $exported_labels"
        BP_OCI_URL=$(echo $transformed_labels | cut -d, -f7 | cut -d= -f2)
        exported_labels="--env BP_OCI_URL=$BP_OCI_URL $exported_labels"
        BP_OCI_VERSION=$(echo $transformed_labels | cut -d, -f8 | cut -d= -f2)
        exported_labels="--env BP_OCI_VERSION=$BP_OCI_VERSION $exported_labels"
        echo "labels=$exported_labels" >> $GITHUB_OUTPUT

    - name: Update version
      if: github.ref_type == 'tag'
      run: npm version ${{ github.ref_name }} --no-git-tag-version
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish image
      run: pack build ${{ vars.DOCKER_USERNAME }}/angular-learning:${{ steps.meta.outputs.version }} --publish --tag "${{ steps.transform.outputs.tags }}" ${{ steps.transform.outputs.labels }} --verbose

    - name: Find PR comment
      if: github.event_name == 'pull_request'
      uses: peter-evans/find-comment@v3
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Docker tags

    - name: Create PR comment
      if: github.event_name == 'pull_request'
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        edit-mode: replace
        body: |
          Docker tags:
          ```
          ${{ steps.meta.outputs.tags }}
          ```
          Docker labels:
          ```
          ${{ steps.meta.outputs.labels }}
          ```

    - name: Add to summary
      if: github.event_name != 'pull_request'
      run: |
        echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY

    - name: Scan with Scout
      uses: docker/scout-action@v1.4.0
      with:
        command: quickview,compare
        image: ${{ vars.DOCKER_USERNAME }}/angular-learning:${{ steps.meta.outputs.version }}
        to: registry://${{ vars.DOCKER_USERNAME }}/angular-learning:latest
